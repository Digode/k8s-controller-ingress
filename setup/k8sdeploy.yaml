apiVersion: v1
kind: Namespace
metadata:
  name: deploy-watcher
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deploy-watcher
  namespace: deploy-watcher
secrets:
- name: deploy-watcher-token
imagePullSecrets:
- name: deploy-watcher-secret
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: deploy-watcher-role
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["extensions", "networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: deploy-watcher-role-binding
subjects:
- kind: ServiceAccount
  name: deploy-watcher
  namespace: deploy-watcher
roleRef:
  kind: ClusterRole
  name: deploy-watcher-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-watcher
  namespace: deploy-watcher
spec:
  selector:
    matchLabels:
      app: deploy-watcher
  template:
    metadata:
      labels:
        app: deploy-watcher
    spec:
      serviceAccountName: deploy-watcher
      containers:
        - name: deploy-watcher
          image: digode/deploy-watcher:arm-latest
          #image: digode/deploy-watcher:latest
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ingressClassNameSuffix
              value: ""
            - name: labelSubdomain
              value: app
            - name: tls
              value: "false"
            - name: annotation.key
              value: apigtw
            - name: annotation.privates
              value: private
            - name: annotation.publics
              value: public
            - name: domain.privates
              value: .local.corp
            - name: domain.publics
              value: .localhost
      restartPolicy: Always
